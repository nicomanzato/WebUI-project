// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app should render correctly 1`] = `
<View
  collapsable={false}
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "white",
        "elevation": 4,
        "justifyContent": "center",
        "padding": 0,
        "shadowColor": "black",
        "shadowOffset": Object {
          "height": 0.5,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 0.5,
        "zIndex": 1,
      }
    }
  >
    <View
      collapsable={undefined}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "#ffeb3b",
            "borderBottomColor": "#1183ff",
            "borderBottomWidth": 2,
            "bottom": 0,
            "height": 2,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
            "width": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <RCTScrollView
        alwaysBounceHorizontal={false}
        automaticallyAdjustContentInsets={false}
        bounces={undefined}
        collapsable={undefined}
        contentContainerStyle={
          Array [
            Object {
              "flexDirection": "row",
              "flexWrap": "nowrap",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        contentOffset={undefined}
        horizontal={true}
        keyboardShouldPersistTaps="handled"
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        overScrollMode="never"
        scrollEnabled={undefined}
        scrollEventThrottle={1}
        scrollsToTop={false}
        showsHorizontalScrollIndicator={false}
      >
        <View>
          <View
            accessibilityComponentType="button"
            accessibilityLabel="Home"
            accessibilityTraits={
              Array [
                "button",
                "selected",
              ]
            }
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 12,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                      Object {
                        "height": 35,
                        "marginTop": 0,
                        "padding": 0,
                        "width": 35,
                      },
                    ]
                  }
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 1,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 0,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            accessibilityComponentType="button"
            accessibilityLabel="Search"
            accessibilityTraits="button"
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "opacity": 0.7,
                    "padding": 12,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                      Object {
                        "height": 35,
                        "marginTop": 0,
                        "padding": 0,
                        "width": 35,
                      },
                    ]
                  }
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 0,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 1,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            accessibilityComponentType="button"
            accessibilityLabel="Config"
            accessibilityTraits="button"
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                    "opacity": 0.7,
                    "padding": 12,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                      Object {
                        "height": 35,
                        "marginTop": 0,
                        "padding": 0,
                        "width": 35,
                      },
                    ]
                  }
                >
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 0,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <View
                    collapsable={undefined}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": "100%",
                        "justifyContent": "center",
                        "minWidth": 25,
                        "opacity": 1,
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      alwaysBounceHorizontal={false}
      automaticallyAdjustContentInsets={false}
      bounces={false}
      contentContainerStyle={
        Object {
          "flex": 1,
        }
      }
      contentOffset={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      directionalLockEnabled={true}
      horizontal={true}
      keyboardDismissMode="on-drag"
      keyboardShouldPersistTaps="always"
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={undefined}
      onScrollEndDrag={undefined}
      overScrollMode="never"
      pagingEnabled={true}
      scrollEnabled={undefined}
      scrollEventThrottle={1}
      scrollsToTop={false}
      showsHorizontalScrollIndicator={false}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            Object {
              "flex": 1,
              "overflow": "hidden",
            }
          }
          testID={undefined}
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "backgroundColor": "#000",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  collapsable={undefined}
                  pointerEvents="auto"
                  style={
                    Object {
                      "backgroundColor": "#E9E9EF",
                      "bottom": 0,
                      "left": 0,
                      "marginTop": -0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "black",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.2,
                      "shadowRadius": 5,
                      "top": 0,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFF",
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fff",
                          "flex": 1,
                          "justifyContent": "center",
                        }
                      }
                    >
                      <ActivityIndicator
                        animating={true}
                        color="#999999"
                        hidesWhenStopped={true}
                        size="small"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                pointerEvents="box-none"
              >
                <View
                  collapsable={undefined}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    collapsable={undefined}
                    onLayout={[Function]}
                    pointerEvents="box-none"
                    style={
                      Object {
                        "backgroundColor": "#F7F7F7",
                        "borderBottomColor": "#A7A7AA",
                        "borderBottomWidth": 0.5,
                        "height": 64,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 20,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          style={null}
          testID={undefined}
        />
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          style={null}
          testID={undefined}
        />
      </View>
    </RCTScrollView>
  </View>
</View>
`;
